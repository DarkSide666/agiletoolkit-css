// ==========================================================
// Responsive Grid System
// ==========================================================

.atk-row {
  .clear-fix;
  >*[class*=atk-col] {
    float: left;
  }
}

// Grid System Loop
.generateColumns(@n, @i: 1, @m) when (@i =< @n) {
  // Percentage Column Gutter
  & when (ispercentage(@m)) {
    .atk-col-@{i} {
      @colsSingleWidth: (100% - @m * (@n - 1)) / @n;
      @colsInnerGutter: @m * (@i - 1);
      width: @colsSingleWidth * @i + @colsInnerGutter;
      &.atk-col-@{n} {
        width: 100%;
      }
    }
  }
  // Pixel/EM Column Gutter
  & when not (ispercentage(@m)) {
    .atk-col-@{i} {
      &, &[class*=atk-col] {
        width: (@i * 100% / @n);
      }
    }
  }
  .generateColumns(@n, @i:@i + 1, @m);
}

// Viewport Features
.viewportFeatures(@c, @g, @b, @wmax, @wmin, @wm, @winmin) { 
  
  // Layout
  .layoutCell(@w) {
    .atk-layout>.atk-layout-row>.atk-layout-cell {
      min-width: @w;
    }
  }
  & when (@winmin = false) {
    .layoutCell(100%);
  }
  & when (isunit(@wm,'px')) and (isunit(@wmin,'px')), (isunit(@wm,'em')) and (isunit(@wmin,'em')), (isunit(@wm,'%')) and (isunit(@wmin,'%')) {
    .atk-wrapper {
      .box-sizing(content-box);
    }
    & when (@winmin = false) {
      .layoutCell(@wmin + @wm*2);
    }
  }
  & when not (@winmin = false) {
    .layoutCell(@winmin);
  }

  .atk-wrapper {
      min-width: @wmin;
      max-width: @wmax;
      padding-left: @wm;
      padding-right: @wm;
  }

  // Grid System
  .atk-row {
    & when (ispercentage(@g)) {
      >*[class*=atk-col] + *[class*=atk-col] {
        margin-left: @g;
      }
    }
    & when not (ispercentage(@g)) {
      margin-left: -@g;
      >*[class*=atk-col] {
        border:0px solid rgba(0,0,0,0);
        border-left-width: @g;
        width: 100%;
      }
    }
  }
  & when (isstring(@c)) {
    .atk-hide-@{c} {
      display: none;
    }
  }
  & when (@b = true) {
    .atk-layout {
      &, >.atk-layout-column, .atk-layout-cell, .atk-layout-row {
        display: block;
      }
      .atk-layout-row {
        height: auto;
      }
    }
    *[class*=atk-menu] {
      >li {
        >*[class*=atk-menu] {
          bottom: 0 !important;
          left: 0 !important;
          position: relative !important;
          right: 0 !important;
          top: 0 !important;
          &.atk-menu-horizontal>li {
            display: block;
            float: none;
          }
        }
        &:hover>*[class*=atk-menu] {
          display: none !important;
        }
        &:focus {
          display: none !important;
        }
      }
    }
  }
}

// Grid System Generator
.createViewport(@class:false, @viewportMinWidth:0, @viewportMaxWidth:false, @cols:12, @colsGutter:20px, @stackLayout:false, @wrapperMinWidth:0, @wrapperMaxWidth:100%, @wrapperMargin:0, @windowMinWidth:false) {
  & when (isnumber(@viewportMinWidth)) and (isnumber(@viewportMaxWidth)) {
    @media screen and (min-width: @viewportMinWidth) and (max-width: @viewportMaxWidth) {
      .viewportFeatures(@c:@class, @g:@colsGutter, @b:@stackLayout, @wmin:@wrapperMinWidth, @wmax:@wrapperMaxWidth, @wm:@wrapperMargin, @winmin:@windowMinWidth);
      .generateColumns(@n:@cols,@m:@colsGutter);
    }
  }
  & when (isnumber(@viewportMinWidth)) and (@viewportMaxWidth = false) {
    @media screen and (min-width: @viewportMinWidth) {
      .viewportFeatures(@c:@class, @g:@colsGutter, @b:@stackLayout, @wmin:@wrapperMinWidth, @wmax:@wrapperMaxWidth, @wm:@wrapperMargin, @winmin:@windowMinWidth);
      .generateColumns(@n:@cols,@m:@colsGutter);
    }
  }
  & when (isnumber(@viewportMaxWidth)) and (@viewportMinWidth = false) {
    @media screen and (max-width: @viewportMaxWidth) {
      .viewportFeatures(@c:@class, @g:@colsGutter, @b:@stackLayout, @wmin:@wrapperMinWidth, @wmax:@wrapperMaxWidth, @wm:@wrapperMargin, @winmin:@windowMinWidth);
      .generateColumns(@n:@cols,@m:@colsGutter);
    }
  }
}